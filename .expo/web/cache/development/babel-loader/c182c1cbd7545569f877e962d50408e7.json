{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CategoryScreen from \"./screens/CategoryScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport FavoritesScreen from \"./screens/FavoritesScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#351401\"\n      },\n      headerTintColor: \"white\",\n      sceneContainerStyle: {\n        backgroundColor: \"#3f2f25\"\n      },\n      drawerContentStyle: {\n        backgroundColor: \"#351401\"\n      },\n      drawerInactiveTintColor: \"white\",\n      drawerActiveTintColor: \"#351401\",\n      drawerActiveBackgroundColor: \"#e4baa1\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoryScreen,\n      options: {\n        title: \"All Categories\",\n        drawerIcon: function drawerIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Ionicons, {\n            name: \"list\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Favorites\",\n      component: FavoritesScreen\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"#351401\"\n          },\n          headerTintColor: \"white\",\n          contentStyle: {\n            backgroundColor: \"#3f2f25\"\n          }\n        },\n        initialRouteName: \"MealsCategory\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Drawer\",\n          component: DrawerNavigator,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"MealsOverview\",\n          component: MealsOverviewScreen\n        }), _jsx(Stack.Screen, {\n          name: \"MealDetail\",\n          component: MealDetailScreen\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createDrawerNavigator","StatusBar","CategoryScreen","MealDetailScreen","MealsOverviewScreen","FavoritesScreen","Stack","Drawer","DrawerNavigator","headerStyle","backgroundColor","headerTintColor","sceneContainerStyle","drawerContentStyle","drawerInactiveTintColor","drawerActiveTintColor","drawerActiveBackgroundColor","title","drawerIcon","color","size","App","contentStyle","headerShown"],"sources":["C:/Users/ACER/Desktop/rnMeals/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport CategoryScreen from \"./screens/CategoryScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport FavoritesScreen from \"./screens/FavoritesScreen\";\n\n//create stack\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#351401\" },\n        headerTintColor: \"white\",\n        sceneContainerStyle: { backgroundColor: \"#3f2f25\" },\n        drawerContentStyle: { backgroundColor: \"#351401\" },\n        drawerInactiveTintColor: \"white\",\n        drawerActiveTintColor: \"#351401\",\n        drawerActiveBackgroundColor: \"#e4baa1\",\n      }}\n    >\n      <Drawer.Screen\n        name=\"Categories\"\n        component={CategoryScreen}\n        options={{\n          title: \"All Categories\",\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"list\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Drawer.Screen name=\"Favorites\" component={FavoritesScreen} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#351401\",\n            },\n            headerTintColor: \"white\",\n            contentStyle: { backgroundColor: \"#3f2f25\" },\n          }}\n          initialRouteName=\"MealsCategory\"\n        >\n          <Stack.Screen\n            name=\"Drawer\"\n            component={DrawerNavigator}\n            options={{\n              headerShown: false,\n            }}\n          />\n          <Stack.Screen\n            name=\"MealsOverview\"\n            component={MealsOverviewScreen}\n            // options={({ route, navigation }) => {\n            //   const catId = route.params.categoryId;\n            //   return { title: catId };\n            // }}\n          />\n          <Stack.Screen name=\"MealDetail\" component={MealDetailScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAE5C,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AACvB,OAAOC,mBAAmB;AAC1B,OAAOC,eAAe;AAAkC;AAAA;AAAA;AAGxD,IAAMC,KAAK,GAAGP,0BAA0B,EAAE;AAC1C,IAAMQ,MAAM,GAAGP,qBAAqB,EAAE;AAEtC,SAASQ,eAAe,GAAG;EACzB,OACE,MAAC,MAAM,CAAC,SAAS;IACf,aAAa,EAAE;MACbC,WAAW,EAAE;QAAEC,eAAe,EAAE;MAAU,CAAC;MAC3CC,eAAe,EAAE,OAAO;MACxBC,mBAAmB,EAAE;QAAEF,eAAe,EAAE;MAAU,CAAC;MACnDG,kBAAkB,EAAE;QAAEH,eAAe,EAAE;MAAU,CAAC;MAClDI,uBAAuB,EAAE,OAAO;MAChCC,qBAAqB,EAAE,SAAS;MAChCC,2BAA2B,EAAE;IAC/B,CAAE;IAAA,WAEF,KAAC,MAAM,CAAC,MAAM;MACZ,IAAI,EAAC,YAAY;MACjB,SAAS,EAAEd,cAAe;MAC1B,OAAO,EAAE;QACPe,KAAK,EAAE,gBAAgB;QACvBC,UAAU,EAAE;UAAA,IAAGC,KAAK,QAALA,KAAK;YAAEC,IAAI,QAAJA,IAAI;UAAA,OACxB,KAAC,QAAQ;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAED,KAAM;YAAC,IAAI,EAAEC;UAAK,EAAG;QAAA;MAEtD;IAAE,EACF,EACF,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,WAAW;MAAC,SAAS,EAAEf;IAAgB,EAAG;EAAA,EAC7C;AAEvB;AAEA,eAAe,SAASgB,GAAG,GAAG;EAC5B,OACE;IAAA,WACE,KAAC,SAAS;MAAC,KAAK,EAAC;IAAO,EAAG,EAC3B,KAAC,mBAAmB;MAAA,UAClB,MAAC,KAAK,CAAC,SAAS;QACd,aAAa,EAAE;UACbZ,WAAW,EAAE;YACXC,eAAe,EAAE;UACnB,CAAC;UACDC,eAAe,EAAE,OAAO;UACxBW,YAAY,EAAE;YAAEZ,eAAe,EAAE;UAAU;QAC7C,CAAE;QACF,gBAAgB,EAAC,eAAe;QAAA,WAEhC,KAAC,KAAK,CAAC,MAAM;UACX,IAAI,EAAC,QAAQ;UACb,SAAS,EAAEF,eAAgB;UAC3B,OAAO,EAAE;YACPe,WAAW,EAAE;UACf;QAAE,EACF,EACF,KAAC,KAAK,CAAC,MAAM;UACX,IAAI,EAAC,eAAe;UACpB,SAAS,EAAEnB;QAAoB,EAK/B,EACF,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,YAAY;UAAC,SAAS,EAAED;QAAiB,EAAG;MAAA;IAC/C,EACE;EAAA,EACrB;AAEP"},"metadata":{},"sourceType":"module"}