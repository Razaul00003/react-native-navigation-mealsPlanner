{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CategoryScreen from \"./screens/CategoryScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    children: [_jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoryScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoryScreen\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"#351401\"\n          },\n          headerTintColor: \"white\",\n          contentStyle: {\n            backgroundColor: \"#3f2f25\"\n          }\n        },\n        initialRouteName: \"MealsCategory\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Drawer\",\n          component: DrawerNavigator\n        }), _jsx(Stack.Screen, {\n          name: \"MealsOverview\",\n          component: MealsOverviewScreen\n        }), _jsx(Stack.Screen, {\n          name: \"MealDetail\",\n          component: MealDetailScreen\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","createDrawerNavigator","StatusBar","CategoryScreen","MealDetailScreen","MealsOverviewScreen","Stack","Drawer","DrawerNavigator","App","headerStyle","backgroundColor","headerTintColor","contentStyle"],"sources":["C:/Users/ACER/Desktop/rnMeals/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport CategoryScreen from \"./screens/CategoryScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\n\n//create stack\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen name=\"Categories\" component={CategoryScreen} />\n      <Drawer.Screen name=\"Categories\" component={CategoryScreen} />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#351401\",\n            },\n            headerTintColor: \"white\",\n            contentStyle: { backgroundColor: \"#3f2f25\" },\n          }}\n          initialRouteName=\"MealsCategory\"\n        >\n          <Stack.Screen name=\"Drawer\" component={DrawerNavigator} />\n          <Stack.Screen\n            name=\"MealsOverview\"\n            component={MealsOverviewScreen}\n            // options={({ route, navigation }) => {\n            //   const catId = route.params.categoryId;\n            //   return { title: catId };\n            // }}\n          />\n          <Stack.Screen name=\"MealDetail\" component={MealDetailScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,SAAS,QAAQ,iBAAiB;AAAC;AAAA;AAAA;AAAA;AAE5C,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AACvB,OAAOC,mBAAmB;AAAsC;AAAA;AAAA;AAGhE,IAAMC,KAAK,GAAGN,0BAA0B,EAAE;AAC1C,IAAMO,MAAM,GAAGN,qBAAqB,EAAE;AAEtC,SAASO,eAAe,GAAG;EACzB,OACE,MAAC,MAAM,CAAC,SAAS;IAAA,WACf,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,YAAY;MAAC,SAAS,EAAEL;IAAe,EAAG,EAC9D,KAAC,MAAM,CAAC,MAAM;MAAC,IAAI,EAAC,YAAY;MAAC,SAAS,EAAEA;IAAe,EAAG;EAAA,EAC7C;AAEvB;AAEA,eAAe,SAASM,GAAG,GAAG;EAC5B,OACE;IAAA,WACE,KAAC,SAAS;MAAC,KAAK,EAAC;IAAO,EAAG,EAC3B,KAAC,mBAAmB;MAAA,UAClB,MAAC,KAAK,CAAC,SAAS;QACd,aAAa,EAAE;UACbC,WAAW,EAAE;YACXC,eAAe,EAAE;UACnB,CAAC;UACDC,eAAe,EAAE,OAAO;UACxBC,YAAY,EAAE;YAAEF,eAAe,EAAE;UAAU;QAC7C,CAAE;QACF,gBAAgB,EAAC,eAAe;QAAA,WAEhC,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEH;QAAgB,EAAG,EAC1D,KAAC,KAAK,CAAC,MAAM;UACX,IAAI,EAAC,eAAe;UACpB,SAAS,EAAEH;QAAoB,EAK/B,EACF,KAAC,KAAK,CAAC,MAAM;UAAC,IAAI,EAAC,YAAY;UAAC,SAAS,EAAED;QAAiB,EAAG;MAAA;IAC/C,EACE;EAAA,EACrB;AAEP"},"metadata":{},"sourceType":"module"}